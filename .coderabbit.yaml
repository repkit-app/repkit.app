# CodeRabbit Configuration for repkit.app
# Marketing website and OpenAI API proxy for RepKit fitness app

language: en-US
early_access: false
enable_free_tier: true

reviews:
  # Review profile - "chill" for less aggressive reviews
  profile: chill

  # Request changes workflow
  request_changes_workflow: false

  # High-level configuration
  high_level_summary: true
  high_level_summary_placeholder: "<!-- This is an auto-generated comment: release notes by coderabbit.ai -->"

  # Auto reviews
  auto_review:
    enabled: true
    auto_incremental_review: true
    ignore_title_keywords:
      - "WIP"
      - "DO NOT REVIEW"
      - "DRAFT"

  # Review toggles
  review_status: true
  collapse_walkthrough: false
  sequence_diagrams: true
  changed_files_summary: true

  # Path-based instructions
  path_instructions:
    - path: "**/*.ts"
      instructions: |
        Review TypeScript code for:
        - Type safety (avoid 'any', use proper types)
        - Async/await best practices
        - Error handling patterns
        - Proper imports and exports

    - path: "**/*.tsx"
      instructions: |
        Review React/TypeScript code for:
        - React Server Components vs Client Components
        - Proper 'use client' directive usage
        - Type-safe props and state
        - React hooks rules
        - Performance considerations

    - path: "app/api/**/*.ts"
      instructions: |
        API route review:
        - Proper HTTP method handling
        - Input validation and sanitization
        - Error handling with appropriate status codes
        - Security best practices (no exposed secrets)
        - Rate limiting considerations
        - Type safety for request/response

    - path: "app/**/page.tsx"
      instructions: |
        Next.js page review:
        - Server Component by default (no unnecessary 'use client')
        - Metadata exports for SEO
        - Loading and error states
        - Accessibility (semantic HTML, ARIA)

    - path: "components/**/*.tsx"
      instructions: |
        Component review:
        - Reusability and composability
        - Proper TypeScript prop types
        - Client vs Server component decision
        - Accessibility features

    - path: "lib/**/*.ts"
      instructions: |
        Utility/library code review:
        - Pure functions where possible
        - Proper error handling
        - Type safety and generics
        - Clear documentation

    - path: "**/*.config.ts"
      instructions: |
        Configuration file review:
        - Valid configuration syntax
        - Security (no hardcoded secrets)
        - Clear comments for options

    - path: "**/*.yml"
      instructions: |
        GitHub Actions workflow review:
        - Valid YAML syntax
        - Proper permissions
        - Secure secrets handling
        - Correct workflow triggers

    - path: "**/*.md"
      instructions: |
        Documentation review:
        - Clear and accurate information
        - Proper markdown formatting
        - Up-to-date with code changes
        - Helpful examples

    - path: ".next/**"
      instructions: "Skip - Next.js build output"

    - path: "node_modules/**"
      instructions: "Skip - Dependencies"

# Chat settings
chat:
  auto_reply: true

# Knowledge base
knowledge_base:
  opt_out: false
  learnings:
    scope: auto

# Tool configuration
tools:
  ast-grep:
    essential_rules: true
  ruff:
    enabled: false
  markdownlint:
    enabled: true
  github-checks:
    enabled: true
    timeout_ms: 90000

# Review settings
abort_on_close: true
